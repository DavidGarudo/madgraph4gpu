Running MG5 in debug mode
************************************************************
*                                                          *
*                     W E L C O M E to                     *
*              M A D G R A P H 5 _ a M C @ N L O           *
*                                                          *
*                                                          *
*                 *                       *                *
*                   *        * *        *                  *
*                     * * * * 5 * * * *                    *
*                   *        * *        *                  *
*                 *                       *                *
*                                                          *
*         VERSION 3.3.1_lo_vect         2022-01-30         *
*         BZR 3.1.1_lo_vectorization           996         *
*                                                          *
*    The MadGraph5_aMC@NLO Development Team - Find us at   *
*    https://server06.fynu.ucl.ac.be/projects/madgraph     *
*                            and                           *
*            http://amcatnlo.web.cern.ch/amcatnlo/         *
*                                                          *
*               Type 'help' for in-line help.              *
*           Type 'tutorial' to learn how MG5 works         *
*    Type 'tutorial aMCatNLO' to learn how aMC@NLO works   *
*    Type 'tutorial MadLoop' to learn how MadLoop works    *
*                                                          *
************************************************************
load MG5 configuration from input/mg5_configuration.txt 
fastjet-config does not seem to correspond to a valid fastjet-config executable (v3+). We will use fjcore instead.
 Please set the 'fastjet'variable to the full (absolute) /PATH/TO/fastjet-config (including fastjet-config).
 MG5_aMC> set fastjet /PATH/TO/fastjet-config

lhapdf-config does not seem to correspond to a valid lhapdf-config executable. 
Please set the 'lhapdf' variable to the (absolute) /PATH/TO/lhapdf-config (including lhapdf-config).
Note that you can still compile and run aMC@NLO with the built-in PDFs
 MG5_aMC> set lhapdf /PATH/TO/lhapdf-config

None does not seem to correspond to a valid lhapdf-config executable. 
Please set the 'lhapdf' variable to the (absolute) /PATH/TO/lhapdf-config (including lhapdf-config).
Note that you can still compile and run aMC@NLO with the built-in PDFs
 MG5_aMC> set lhapdf /PATH/TO/lhapdf-config

No valid eps viewer found. Please set in ./input/mg5_configuration.txt
Using default web browser "firefox". Set another one in ./input/mg5_configuration.txt
import /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt.mg
The import format was not given, so we guess it as command
set stdout_level DEBUG
set output information to level: 10
generate g g > t t~
No model currently active, so we import the Standard Model
INFO: load particles 
INFO: load vertices 
[1;32mDEBUG: model prefixing  takes 0.006977558135986328 [0m
INFO: Restrict model sm with file models/sm/restrict_default.dat . 
INFO: Change particles name to pass to MG5 convention 
Defined multiparticle p = g u c d s u~ c~ d~ s~
Defined multiparticle j = g u c d s u~ c~ d~ s~
Defined multiparticle l+ = e+ mu+
Defined multiparticle l- = e- mu-
Defined multiparticle vl = ve vm vt
Defined multiparticle vl~ = ve~ vm~ vt~
Defined multiparticle all = g u c d s u~ c~ d~ s~ a ve vm vt e- mu- ve~ vm~ vt~ e+ mu+ t b t~ b~ z w+ h w- ta- ta+
INFO: Checking for minimal orders which gives processes. 
INFO: Please specify coupling orders to bypass this step. 
INFO: Trying coupling order WEIGHTED<=2: WEIGTHED IS QCD+2*QED 
INFO: Trying process: g g > t t~ WEIGHTED<=2 @1  
INFO: Process has 3 diagrams 
1 processes with 3 diagrams generated in 0.011 s
Total: 1 processes with 3 diagrams
output madevent CODEGEN_mad_gg_tt --hel_recycling=False --vector_size=16 --me_exporter=standalone_cudacpp
Load PLUGIN.CUDACPP_SA_OUTPUT
[1;34mPlugin PLUGIN.CUDACPP_SA_OUTPUT has marked as NOT being validated with this version. 
It has been validated for the last time with version: 3.1.1[0m
[1mAddition matrix-element will be done with PLUGIN: CUDACPP_SA_OUTPUT[0m
[1mOutput will be done with PLUGIN: CUDACPP_SA_OUTPUT[0m
[1;32mDEBUG:  cformat = [0m standalone_cudacpp [1;30m[export_cpp.py at line 3008][0m [0m
[1;32mDEBUG:  Entering PLUGIN_ProcessExporter.__init__ (initialise the exporter) [1;30m[output.py at line 159][0m [0m
INFO: initialize a new directory: CODEGEN_mad_gg_tt 
INFO: remove old information in CODEGEN_mad_gg_tt 
FileWriter <class 'madgraph.iolibs.file_writers.FileWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/makefile
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for vector.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/PDF/opendata.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/PDF/pdfwrap_lhapdf.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/run_config.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/SubProcesses/symmetry.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/SubProcesses/addmothers.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/vector.inc
[1;32mDEBUG:  Entering PLUGIN_ProcessExporter.copy_template (initialise the directory) [1;30m[output.py at line 164][0m [0m
[1;34mWARNING: File exists /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt [0m
INFO: Creating subdirectories in directory /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt 
[1;34mWARNING: File exists /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt [0m
[1;34mWARNING: File exists /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt [0m
[1;34mWARNING: File exists /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt [0m
[1;32mDEBUG:  "pass here", self._curr_exporter.exporter, self._me_curr_exporter.exporter = [0m pass here v4 gpu [1;30m[madgraph_interface.py at line 8289][0m [0m
INFO: Organizing processes into subprocess groups 
INFO: Generating Helas calls for process: g g > t t~ WEIGHTED<=2 @1 
[1;32mDEBUG:  keepordering (default): True [1;30m[output.py at line 26][0m [0m
INFO: Processing color information for process: g g > t t~ @1 
INFO: Creating files in directory P1_gg_ttx 
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for driver.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for matrix1.f
[1;32mDEBUG:  'before', call, arg = [0m before CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'VVV1%(propa)s_1', 'coup': '%(coup0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),', 'out': 'W(1,%(out)d)', 'mass': '%(M)s, fk_%(W)s,'} [1;30m[export_v4.py at line 3925][0m [0m
[1;32mDEBUG:  'after',call, arg = [0m after CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'VVV1%(propa)s_1', 'coup': '%(coup0)s%(vec0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),', 'out': 'W(1,%(out)d)', 'mass': '%(M)s, fk_%(W)s,'} [1;30m[export_v4.py at line 3928][0m [0m
[1;32mDEBUG:  'before', call, arg = [0m before CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'FFV1_0', 'coup': '%(coup0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),W(1,%(2)d),', 'mass': '', 'out': 'AMP(%(out)d)'} [1;30m[export_v4.py at line 3925][0m [0m
[1;32mDEBUG:  'after',call, arg = [0m after CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'FFV1_0', 'coup': '%(coup0)s%(vec0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),W(1,%(2)d),', 'mass': '', 'out': 'AMP(%(out)d)'} [1;30m[export_v4.py at line 3928][0m [0m
[1;32mDEBUG:  'before', call, arg = [0m before CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'FFV1%(propa)s_1', 'coup': '%(coup0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),', 'out': 'W(1,%(out)d)', 'mass': '%(M)s, fk_%(W)s,'} [1;30m[export_v4.py at line 3925][0m [0m
[1;32mDEBUG:  'after',call, arg = [0m after CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'FFV1%(propa)s_1', 'coup': '%(coup0)s%(vec0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),', 'out': 'W(1,%(out)d)', 'mass': '%(M)s, fk_%(W)s,'} [1;30m[export_v4.py at line 3928][0m [0m
[1;32mDEBUG:  'before', call, arg = [0m before CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'FFV1%(propa)s_2', 'coup': '%(coup0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),', 'out': 'W(1,%(out)d)', 'mass': '%(M)s, fk_%(W)s,'} [1;30m[export_v4.py at line 3925][0m [0m
[1;32mDEBUG:  'after',call, arg = [0m after CALL %(routine_name)s(%(wf)s%(coup)s%(mass)s%(out)s) {'routine_name': 'FFV1%(propa)s_2', 'coup': '%(coup0)s%(vec0)s,', 'wf': 'W(1,%(0)d),W(1,%(1)d),', 'out': 'W(1,%(out)d)', 'mass': '%(M)s, fk_%(W)s,'} [1;30m[export_v4.py at line 3928][0m [0m
[1mINFO: Some T-channel width have been set to zero [new since 2.8.0]
 if you want to keep this width please set "zerowidth_tchannel" to False [0m
[1;32mDEBUG:  process_exporter_cpp = [0m <PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_OneProcessExporter object at 0x7f06e808edc0> [1;30m[export_v4.py at line 5943][0m [0m
INFO: Creating files in directory . 
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.generate_process_files [1;30m[model_handling.py at line 1056][0m [0m
FileWriter <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_FileWriter'> for ././CPPProcess.h
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.write_process_h_file [1;30m[model_handling.py at line 1125][0m [0m
FileWriter <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_FileWriter'> for ././CPPProcess.cc
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.write_process_cc_file [1;30m[model_handling.py at line 1147][0m [0m
[1;32mDEBUG:  call = [0m vxxxxx( momenta,m_pars->%s, cHel[ihel][%d],%+d, w_sv[%d], %d ); [1;30m[model_handling.py at line 1433][0m [0m
[1;32mDEBUG:  ('ZERO', 0, -1, 0, 0) [1;30m[model_handling.py at line 1434][0m [0m
[1;32mDEBUG:  call = [0m vxxxxx( momenta,m_pars->%s, cHel[ihel][%d],%+d, w_sv[%d], %d ); [1;30m[model_handling.py at line 1433][0m [0m
[1;32mDEBUG:  ('ZERO', 1, -1, 1, 1) [1;30m[model_handling.py at line 1434][0m [0m
[1;32mDEBUG: only one Matrix-element supported? [0m
INFO: Created files CPPProcess.h and CPPProcess.cc in directory ./. 
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.edit_check_sa [1;30m[model_handling.py at line 1077][0m [0m
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.edit_mgonGPU [1;30m[model_handling.py at line 1094][0m [0m
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.edit_processidfile [1;30m[model_handling.py at line 1101][0m [0m
[1;32mDEBUG:  Entering PLUGIN_OneProcessExporter.edit_testxxx [1;30m[model_handling.py at line 1113][0m [0m
[1;32mDEBUG:  proc_id = [0m 1 [1;30m[export_cpp.py at line 710][0m [0m
[1;32mDEBUG:  config_map = [0m [1, 2, 3] [1;30m[export_cpp.py at line 711][0m [0m
[1;32mDEBUG:  subproc_number = [0m 0 [1;30m[export_cpp.py at line 712][0m [0m
[1;32mDEBUG:  Done [1;30m[export_cpp.py at line 713][0m [0m
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for auto_dsig1.f
INFO: Generating Feynman diagrams for Process: g g > t t~ WEIGHTED<=2 @1 
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for auto_dsig.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for coloramps.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for get_color.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for config_subproc_map.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for configs.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for config_nqcd.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for decayBW.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for dname.mg
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for iproc.dat
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for leshouche.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for maxamps.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for mg.sym
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for mirrorprocs.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for ncombs.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for nexternal.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for ngraphs.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for pmass.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for props.inc
INFO: Finding symmetric diagrams for subprocess group gg_ttx 
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for symswap.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for symperms.inc
[1;32mDEBUG:  done [1;30m[madgraph_interface.py at line 8459][0m [0m
Generated helas calls for 1 subprocesses (3 diagrams) in 0.009 s
Wrote files for 10 helas calls in 0.122 s
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/param_read.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/input.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/intparam_definition.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/../PDF/ElectroweakFlux.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/actualize_mp_ext_params.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/coupl.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/coupl_write.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/couplings.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/couplings1.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/couplings2.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/param_write.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/model_functions.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/MODEL/model_functions.f
ALOHA: aloha starts to compute helicity amplitudes
ALOHA: aloha creates VVV1 set of routines with options: P0[0m
ALOHA: aloha creates FFV1 routines[0m
ALOHA: aloha creates 2 routines in  0.172 s
[1;32mDEBUG:  language = [0m fortran [1;30m[aloha_writers.py at line 2451][0m [0m
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/DHELAS/VVV1P0_1.f
[1;32mDEBUG:  language = [0m fortran [1;30m[aloha_writers.py at line 2451][0m [0m
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/DHELAS/FFV1_0.f
[1;32mDEBUG:  language = [0m fortran [1;30m[aloha_writers.py at line 2451][0m [0m
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/DHELAS/FFV1_1.f
[1;32mDEBUG:  language = [0m fortran [1;30m[aloha_writers.py at line 2451][0m [0m
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/DHELAS/FFV1_2.f
[1;32mDEBUG:  Entering PLUGIN_ProcessExporter.convert_model (create the model) [1;30m[output.py at line 176][0m [0m
ALOHA: aloha starts to compute helicity amplitudes
ALOHA: aloha creates VVV1 set of routines with options: P0[0m
ALOHA: aloha creates FFV1 routines[0m
ALOHA: aloha creates 4 routines in  0.159 s
<class 'aloha.create_aloha.AbstractRoutine'> VVV1
[1;32mDEBUG:  language = [0m <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_ALOHAWriter'> [1;30m[aloha_writers.py at line 2451][0m [0m
<class 'aloha.create_aloha.AbstractRoutine'> FFV1
[1;32mDEBUG:  language = [0m <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_ALOHAWriter'> [1;30m[aloha_writers.py at line 2451][0m [0m
<class 'aloha.create_aloha.AbstractRoutine'> FFV1
[1;32mDEBUG:  language = [0m <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_ALOHAWriter'> [1;30m[aloha_writers.py at line 2451][0m [0m
<class 'aloha.create_aloha.AbstractRoutine'> FFV1
[1;32mDEBUG:  language = [0m <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_ALOHAWriter'> [1;30m[aloha_writers.py at line 2451][0m [0m
FileWriter <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_FileWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/src/./HelAmps_sm.h
INFO: Created file HelAmps_sm.h in directory /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/src/. 
FileWriter <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_FileWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/src/./Parameters_sm.h
FileWriter <class 'PLUGIN.CUDACPP_SA_OUTPUT.model_handling.PLUGIN_FileWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/src/./Parameters_sm.cc
INFO: Created files Parameters_sm.h and Parameters_sm.cc in directory 
INFO: /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/src/. and /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/src/. 
save configuration file to /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Cards/me5_configuration.txt
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/combine_events.f
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/maxconfigs.inc
FileWriter <class 'madgraph.iolibs.file_writers.FortranWriter'> for /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/Source/maxparticles.inc
INFO: Use Fortran compiler gfortran 
INFO: Use c++ compiler g++ 
INFO: Generate jpeg diagrams 
INFO: Generate web pages 
Output to directory /data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt done.
Type "launch" to generate events from this process, or see
/data/avalassi/GPU2020/MG5aMC/3.1.1_lo_vectorization/CODEGEN_mad_gg_tt/README
Run "open index.html" to see more information about this process.
quit

real	0m2.414s
user	0m2.046s
sys	0m0.334s
