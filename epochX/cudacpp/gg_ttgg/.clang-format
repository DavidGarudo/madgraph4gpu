# AV's draft .clang-format
# --- 
# March 2021: original draft based on clang 8.0.0 (BasedOnStyle: Google)
# See https://github.com/madgraph5/madgraph4gpu/blob/e0f033e6ead254faedf8985955600a0d81bd0880/.clang-format
# --- 
# February 2022: new draft based on clang 13.0.0 (BasedOnStyle: Google)
# See https://releases.llvm.org/13.0.0/tools/clang/docs/ClangFormatStyleOptions.html
---
Language: Cpp
BasedOnStyle: Google

AccessModifierOffset: -2 # AV was -1
AlignAfterOpenBracket: Align # AV ok
AlignArrayOfStructures: None
AlignConsecutiveAssignments: None
AlignConsecutiveBitFields: None
AlignConsecutiveDeclarations: None
AlignConsecutiveMacros: None # AV ok
AlignEscapedNewlines: DontAlign # AV was Left
AlignOperands: DontAlign # AV was Align
AlignTrailingComments: true # AV ok
AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Always # AV was Never
AllowShortEnumsOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: true # AV was false
AllowShortFunctionsOnASingleLine: All
AllowShortLambdasOnASingleLine: All
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterDefinitionReturnType: None
###AlwaysBreakAfterReturnType: All # AV use this initially, then switch to TopLevelDefinitions!
AlwaysBreakAfterReturnType: TopLevelDefinitions # AV was None (altearnative: All?)
AlwaysBreakBeforeMultilineStrings: false # AV was true
AlwaysBreakTemplateDeclarations: Yes
###AttributeMacros: # AV keep defaults (NB this is not about '__host__' attributes, see llvm/llvm-project/issues/45968)
###  - __capability
BinPackArguments: true
BinPackParameters: true
BitFieldColonSpacing: Both
BraceWrapping: # AV (this is only relevant for "BreakBeforeBraces: Custom")
  AfterCaseLabel: true # AV was false
  AfterClass: true # AV was false
  AfterControlStatement: Always # AV was Never
  AfterEnum: true # AV was false
  AfterFunction: true # AV was false
  AfterNamespace: true # AV was false
  AfterObjCDeclaration: true # AV was false
  AfterStruct: true # AV was false
  AfterUnion: true # AV was false
  AfterExternBlock: true # AV was false (NB: does not work unless IndentExternBlock is AfterExternBlock?!)
  BeforeCatch: true # AV was false
  BeforeElse: true # AV was false
  BeforeLambdaBody: true # AV was false
  BeforeWhile: true # AV was false
  IndentBraces: false # AV ok
  SplitEmptyFunction: true # AV ok
  SplitEmptyRecord: true # AV ok
  SplitEmptyNamespace: true # AV ok
BreakBeforeBinaryOperators: None # AV ok
BreakBeforeConceptDeclarations: true
BreakBeforeBraces: Custom # AV was Attach (alternative: Allman)
BreakBeforeInheritanceComma: false
BreakInheritanceList: BeforeColon # AV ok (alternative: BeforeComma?)
BreakBeforeTernaryOperators: true # AV ok
BreakConstructorInitializersBeforeComma: true # AV was false
BreakConstructorInitializers: BeforeColon
BreakAfterJavaFieldAnnotations: false
BreakStringLiterals: true
ColumnLimit: 0 # AV was 80
###CommentPragmas: '^[^ ]*' # AV use SpacesInLineCommentPrefix Min=0 Max=1 to allow both "//comment" and "// comment"
CompactNamespaces: false # AV ok
ConstructorInitializerAllOnOneLineOrOnePerLine: true
ConstructorInitializerIndentWidth: 2 # AV was 4
ContinuationIndentWidth: 2 # AV was 4
Cpp11BracedListStyle: true # AV ok
DeriveLineEnding: false # AV was true
DerivePointerAlignment: false # AV was true
###DisableFormat: false # AV ok
EmptyLineAfterAccessModifier: Leave # AV was Never
EmptyLineBeforeAccessModifier: Leave # AV was LogicalBlock
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: false # AV was true
###ForEachMacros:
###  - foreach
###  - Q_FOREACH
###  - BOOST_FOREACH
###IfMacros:
###  - KJ_IF_MAYBE
IncludeBlocks: Regroup
IncludeCategories:
  - Regex:           '^<ext/.*\.h>'
    Priority:        4 # AV was 2
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '^<.*\.h>'
    Priority:        5 # AV was 1
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '^<.*'
    Priority:        6 # AV was 2
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           'mgOnGpuConfig.h'
    Priority:        1 # AV new
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           'mgOnGpu*.*'
    Priority:        2 # AV new
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '.*'
    Priority:        3 # AV was 3
    SortPriority:    0
    CaseSensitive:   false
IncludeIsMainRegex: '([-_](test|unittest))?$'
IncludeIsMainSourceRegex: ''
IndentAccessModifiers: false # AV ok
IndentCaseLabels: true # AV ok
IndentCaseBlocks: false # AV ok
IndentGotoLabels: false # AV was true
IndentPPDirectives: None # AV ok (NB: AfterHash and BeforeHash do not seem to work as intended)
###IndentExternBlock: Indent # AV was AfterExternBlock
IndentExternBlock: AfterExternBlock # AV ok (only with Custom BraceWrapping.AfterExternBlock = true)
IndentRequires: false # AV ok(?)
IndentWidth: 2 # AV ok
IndentWrappedFunctionNames: false # AV ok
###InsertTrailingCommas: None
###JavaScriptQuotes: Leave
###JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature
MacroBlockBegin: ''
MacroBlockEnd: ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: All # AV was None
###ObjCBinPackProtocolList: Never
###ObjCBlockIndentWidth: 2
###ObjCBreakBeforeNestedBlockParam: true
###ObjCSpaceAfterProperty: false
###ObjCSpaceBeforeProtocolList: true
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200
PenaltyIndentedWhitespace: 0
PointerAlignment: Left # AV ok
PPIndentWidth: 0 # AV was -1
RawStringFormats:
  - Language:        Cpp
    Delimiters:
      - cc
      - CC
      - cpp
      - Cpp
      - CPP
      - 'c++'
      - 'C++'
    CanonicalDelimiter: ''
    BasedOnStyle:    google
  - Language:        TextProto
    Delimiters:
      - pb
      - PB
      - proto
      - PROTO
    EnclosingFunctions:
      - EqualsProto
      - EquivToProto
      - PARSE_PARTIAL_TEXT_PROTO
      - PARSE_TEST_PROTO
      - PARSE_TEXT_PROTO
      - ParseTextOrDie
      - ParseTextProtoOrDie
      - ParseTestProto
      - ParsePartialTestProto
    CanonicalDelimiter: pb
    BasedOnStyle:    google
ReferenceAlignment: Pointer
ReflowComments: false # AV was true
ShortNamespaceLines: 1 # AV ok
SortIncludes: CaseSensitive
SortJavaStaticImport: Before
SortUsingDeclarations: false # AV was true
SpaceAfterCStyleCast: false # AV ok
SpaceAfterLogicalNot: false # AV ok
SpaceAfterTemplateKeyword: false # AV was true
SpaceAroundPointerQualifiers: Default # AV ok (alternative: Before?)
SpaceBeforeAssignmentOperators: true # AV ok
SpaceBeforeCaseColon: false # AV ok
SpaceBeforeCpp11BracedList: false # AV ok
SpaceBeforeCtorInitializerColon: true # AV ok
SpaceBeforeInheritanceColon: true # AV ok
SpaceBeforeParens: Never # AV was ControlStatements
SpaceBeforeRangeBasedForLoopColon: false # AV was true
SpaceBeforeSquareBrackets: false # AV ok
SpaceInEmptyBlock: false # AV ok
SpaceInEmptyParentheses: false # AV ok
SpacesBeforeTrailingComments: 1 # AV was 2
SpacesInAngles: Never # AV ok
SpacesInConditionalStatement: false # AV ok (does this work?)
SpacesInContainerLiterals: false # AV was true
SpacesInCStyleCastParentheses: false # AV ok
SpacesInLineCommentPrefix:
  Minimum: 0 # AV was 1
  Maximum: 1 # AV was -1
SpacesInParentheses: true # AV was false
SpacesInSquareBrackets: false # AV ok
Standard: c++17 # AV was Auto
###StatementAttributeLikeMacros: # AV keep defaults
###  - Q_EMIT
###StatementMacros: # AV keep defaults
###  - Q_UNUSED
###  - QT_REQUIRE_VERSION
###TabWidth: 8 # AV irrelevant if UseTab=Never?
UseCRLF: false # AV ok (but set DeriveLineEnding=false)
UseTab: Never # AV ok
###WhitespaceSensitiveMacros: # AV keep defaults
###  - STRINGIZE
###  - PP_STRINGIZE
###  - BOOST_PP_STRINGIZE
###  - NS_SWIFT_NAME
###  - CF_SWIFT_NAME
...

#AccessModifierOffset: -2 # was -1
#AlignConsecutiveAssignments: false # keep default
#AlignConsecutiveDeclarations: false # keep default
#AlignEscapedNewlines: DontAlign # was Left (certainly not Right with 130 columns)
#AlignOperands: false # was true
####AlignTrailingComments: false # was true
#AllowShortBlocksOnASingleLine: true # was false
#AllowShortCaseLabelsOnASingleLine: true # was false
#AlwaysBreakAfterReturnType: None # keep default
#AlwaysBreakBeforeMultilineStrings: true # keep default
#AlwaysBreakTemplateDeclarations: Yes # keep default
#BinPackArguments: false # was true
#BinPackParameters: false # was true
#BreakBeforeBinaryOperators: None # keep default (very long arithmetics in ALOHA)
#BreakBeforeBraces: Allman # was Attach
#BreakBeforeTernaryOperators: true # keep default?
#BreakConstructorInitializersBeforeComma: true # was false
#BreakConstructorInitializers: BeforeComma # was BeforeColon
#BreakInheritanceList: BeforeComma # was BeforeColon
#ColumnLimit: 130 # was 80
####CommentPragmas: '.*' # was '^ IWYU pragma:' (do not modify any comment!)
#CompactNamespaces: false # keep default
####ConstructorInitializerAllOnOneLineOrOnePerLine: true # keep default
#ConstructorInitializerIndentWidth: 2 # was 4
#ContinuationIndentWidth: 2 # was 4
#Cpp11BracedListStyle: true # keep default: do not add extra spaces in {+1, -1, +1, -1}
####DerivePointerAlignment: false # was true
###IncludeBlocks: Regroup # was Preserve
###IncludeCategories: 
###  - Regex:    '^<.*\.h>'
###    Priority: 3 # was 1
###  - Regex:    '^<.*'
###    Priority: 2 # was 2
###  - Regex:    '.*'
###    Priority: 1 # was 3
#IndentCaseLabels: true # keep default
#IndentPPDirectives: None # keep default
#IndentWidth: 2 # keep default
#IndentWrappedFunctionNames: false # keep default (NB it does indent inline/global before type however)
#KeepEmptyLinesAtTheStartOfBlocks: false # keep default
#MaxEmptyLinesToKeep: 1 # keep default
#NamespaceIndentation: All # was None
####PenaltyBreakComment: 300 # keep default (no impact even if > PenaltyExcessCharacter?)
####PenaltyExcessCharacter: 1000000 # keep default
####PointerAlignment: Left # keep default (no impact unless DerivePointerAlignment is false?)
#ReflowComments: false # was true
#SortIncludes: true # keep default
#SortUsingDeclarations: true # keep default
#SpaceAfterCStyleCast: false # keep default
#SpaceAfterTemplateKeyword: false # was true
####SpaceAroundPointerQualifiers: ??? # not in clang-format8
#SpaceBeforeAssignmentOperators: true # keep default
#SpaceBeforeCpp11BracedList: false # keep default
#SpaceBeforeCtorInitializerColon: true # keep default
#SpaceBeforeInheritanceColon: true # keep default
#SpaceBeforeParens: ControlStatements # keep default
#SpaceBeforeRangeBasedForLoopColon: true # keep default
#SpaceInEmptyParentheses: false # keep default
#SpacesBeforeTrailingComments: 1 # was 2
#SpacesInAngles: false # keep default
#SpacesInCStyleCastParentheses: false # keep default
#SpacesInParentheses: true # was false
#SpacesInSquareBrackets: false # keep default
#Standard: Cpp11 # was Auto
#TabWidth: 8 # keep default
#UseTab: Never # keep default
#...
